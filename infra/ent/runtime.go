// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/pocket7878/go-ddd-learning/infra/ent/schema"
	"github.com/pocket7878/go-ddd-learning/infra/ent/task"
	"github.com/pocket7878/go-ddd-learning/infra/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescName is the schema descriptor for name field.
	taskDescName := taskFields[1].Descriptor()
	// task.NameValidator is a validator for the "name" field. It is called by the builders before save.
	task.NameValidator = taskDescName.Validators[0].(func(string) error)
	// taskDescPostponeCount is the schema descriptor for postpone_count field.
	taskDescPostponeCount := taskFields[3].Descriptor()
	// task.DefaultPostponeCount holds the default value on creation for the postpone_count field.
	task.DefaultPostponeCount = taskDescPostponeCount.Default.(int)
	// taskDescDueDate is the schema descriptor for due_date field.
	taskDescDueDate := taskFields[4].Descriptor()
	// task.DefaultDueDate holds the default value on creation for the due_date field.
	task.DefaultDueDate = taskDescDueDate.Default.(time.Time)
	// taskDescID is the schema descriptor for id field.
	taskDescID := taskFields[0].Descriptor()
	// task.IDValidator is a validator for the "id" field. It is called by the builders before save.
	task.IDValidator = taskDescID.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(string) error)
}
