// Code generated by entc, DO NOT EDIT.

package task

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the task type in the database.
	Label = "task"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldTaskStatus holds the string denoting the task_status field in the database.
	FieldTaskStatus = "task_status"
	// FieldPostponeCount holds the string denoting the postpone_count field in the database.
	FieldPostponeCount = "postpone_count"
	// FieldDueDate holds the string denoting the due_date field in the database.
	FieldDueDate = "due_date"
	// Table holds the table name of the task in the database.
	Table = "tasks"
)

// Columns holds all SQL columns for task fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldTaskStatus,
	FieldPostponeCount,
	FieldDueDate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultPostponeCount holds the default value on creation for the "postpone_count" field.
	DefaultPostponeCount int
	// DefaultDueDate holds the default value on creation for the "due_date" field.
	DefaultDueDate time.Time
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)

// TaskStatus defines the type for the "task_status" enum field.
type TaskStatus string

// TaskStatusUndone is the default value of the TaskStatus enum.
const DefaultTaskStatus = TaskStatusUndone

// TaskStatus values.
const (
	TaskStatusUndone TaskStatus = "undone"
	TaskStatusDone   TaskStatus = "done"
)

func (ts TaskStatus) String() string {
	return string(ts)
}

// TaskStatusValidator is a validator for the "task_status" field enum values. It is called by the builders before save.
func TaskStatusValidator(ts TaskStatus) error {
	switch ts {
	case TaskStatusUndone, TaskStatusDone:
		return nil
	default:
		return fmt.Errorf("task: invalid enum value for task_status field: %q", ts)
	}
}
